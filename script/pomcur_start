#!/usr/bin/perl

use strict;
use warnings;
use Carp;
use File::Basename;
use Getopt::Long qw(:config pass_through);

BEGIN {
  my $script_name = basename $0;

  if (-f $script_name && ! -d "etc") {
    # we're in the scripts directory - go up
    chdir "..";
  }

  push @INC, "lib";
};

use PomCur::Meta::Util;

$ENV{POMCUR_CONFIG_LOCAL_SUFFIX} ||= 'deploy';

my $app_name = 'pomcur';

if ($ENV{POMCUR_CONFIG_LOCAL_SUFFIX} eq 'deploy') {
  my $init_dir = undef;

  GetOptions ("initialise=s" => \$init_dir);

  if ($init_dir) {
    my $config = PomCur::Config->new("${app_name}.yaml");
    PomCur::Meta::Util::initialise_app($config, $init_dir);
    print "Initialisation succesful\n";
    exit (0);
  } else {
    if (!PomCur::Meta::Util::app_initialised($app_name)) {
      die "$0: Error - application not initialised

Run:
  $0 --initialise <some_directory>
to initialise

<some_directory> must be empty\n";
    }
  }
} else {
  # we're testing
}

require Plack::Runner;
require Plack::Builder;
require Plack::Middleware::ReverseProxy;
require Plack::Middleware::Debug;
require Plack::Middleware::Expires;

require PomCur;

PomCur->setup_engine('PSGI');
my $app = sub { PomCur->run(@_) };

$app = Plack::Middleware::ReverseProxy->wrap($app);
$app = Plack::Middleware::Expires->wrap($app,
                                        content_type => qr!^image/!,
                                        expires => 'modification plus 1 year');

if ($ENV{POMCUR_DEBUG}) {
  $app = Plack::Middleware::Debug->wrap($app);
}

my $runner = Plack::Runner->new;

$runner->parse_options(@ARGV);
$runner->run($app);
