PomCur installation and maintainence.

* Introduction
  PomCur is a generic gene annotation tool with a focus on community curation.
  This document describes PomCur from the adminstrators perspective.
* Requirements
  - Linux, BSD or UNIX
  - Perl, clucene
* Getting the code
  Currently the easiest way to get the code is via GitHub.  Run this command
  to get a copy of the code:
#+BEGIN_SRC sh
  git clone git://github.com/kimrutherford/pomcur.git pomcur
#+END_SRC
  This creates a directory called "=pomcur=".  The directory can be updated
  later with the command:
#+BEGIN_SRC sh
  git pull
#+END_SRC
* Installation
** Installing basic prerequisites
*** Debian
    At a minimum, these packages need to installed before [[id:fafab442-0030-4cef-b466-1dafef4827cf][running make]] in the
    =pomcur= directory:
#+BEGIN_SRC sh
sudo apt-get install perl gcc tar gzip bzip2 make libmodule-install-perl
sudo apt-get install libclucene-dev libclucene0ldbl
sudo cpan Dist::CheckConflicts
sudo cpan Module::Install::Catalyst
#+END_SRC

    If installing from the =git= repository, the git executable will be needed:
#+BEGIN_SRC sh
sudo apt-get install git-core
#+END_SRC

*** CPAN tip
    Use these commands at the =cpan= prompt avoid lots of questions while
    installing:
#+BEGIN_SRC sh
  o conf prerequisites_policy follow
  o conf build_requires_install_policy no
  o conf commit
#+END_SRC

    This command at the CPAN prompt will update CPAN and install Readline
    support:
#+BEGIN_SRC sh
  install Bundle::CPAN
#+END_SRC

** Installing other Perl modules
   :PROPERTIES:
   :ID:       fafab442-0030-4cef-b466-1dafef4827cf
   :END:
#+BEGIN_SRC sh
perl Makefile.PL
make
#+END_SRC
* Quick start guide
** Initialising the data directory
   (in the pomcur directory)
   =./script/pomcur_start --init <some_directory>=
** Running the server
   =./script/pomcur_start=
** Visit the application start page
   http://localhost:5000
* Configuration
** =pomcur.yaml=
** Loading data
* Implementation details
** Structure
   There are two parts to the system.

   "Track" run is the part that the adminstrator uses to add people,
   publications and curation sessions to the database.

   "Curs" handles the user curation sessions.
*** Track - user, publication and session tracking
**** Database storage
***** SQLite for main database
*** Curs - curation sessions
    Each curation session has a cooresponding SQLite database.
** Databases
** Database structure
** Code
   PomCur is written in Perl, implemented using the Catalyst framework and
   running on a Plack server.

* Developing PomCur
** Running tests
   :PROPERTIES:
   :ID:       7e75cddc-b9b9-410b-ac68-8900457483ad
   :END:
   In general the tests can be run with: =make test= in the main pomcur
   directory.  If the schema or test genes or ontologies are is changed the
   test data will need to be [[id:7e75cddc-b9b9-410b-ac68-8900457483ad][re-initialised]].
** Helper scripts
   Scripts to help developers:
   - =etc/db_initialise.pl= :: create empty template database from the schemas
        and recreate the database classes in lib/PomCur/TrackDB and
        lib/PomCur/CursDB
   - =etc/test_data_initialise.pl= :: re-create test data files that don't change
        very often.  eg. the test PubMed XML file.  Currently this script only
        needs to be run if the list of publications for the test database
        changes
   - =etc/test_initialise.pl= :: initialise the test databases in t/data with
        a small number of genes and a mini version of the Gene Ontology
        database
   - =etc/local_initialise.pl= :: create a test instance of PomCur in ./local
** Initialising test data
   :PROPERTIES:
   :ID:       5867435c-b002-4c97-b912-1cf0d5167100
   :END:
   Run the following commands in the pomcur directory to create the test
   database and to populate it with test data:
#+BEGIN_SRC sh
./etc/db_initialise.pl
./etc/test_initialise.pl
#+END_SRC

   That will need to be done each time the schemas or test data change.

   To create a local test instance of PomCur, run =local_initialise.pl=
** Running the test instance
   The server can be run from the top level directory with this command:
#+BEGIN_SRC sh
POMCUR_CONFIG_LOCAL_SUFFIX=local PERL5LIB=lib ./script/pomcur_server.pl -p 5000 -r -d
#+END_SRC
   "5000" is the local port to connect on.  The server should then be
   available at http://localhost:5000/

* Config
###+INFOJS_OPT: view:content toc:t ltoc:t mouse:#dddddd
#+OPTIONS:     H:5
#+STYLE: <style type="text/css">  html { font-family: Times, serif; font-size: 16pt; }</style>
