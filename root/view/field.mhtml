<%doc>
This component renders the value one field of an object.  If the field contains
the id of another object it will be rendered as a link to the
referenced object.  If the field is the primary id key of the current object,
it will be rendered as a 'details' link.
</%doc>

<%args>
$object
$class_info
$field_name
</%args>

<span class="field-value">
% if ($field_type eq 'table_id') {
% # don't show for now, was "details ..."
% } else {
%   if ($field_type eq 'foreign_key' && $field_value && defined $ref_display_key) {
  <span class="ref-field">
  <a href='<% $c->uri_for("/view/object", $ref_table, 
               PomCur::DB::id_of_object($field_value),
               { model => $model_name } ) %>'>
    <& field.mhtml, object => $referenced_object, class_info => $ref_class_info,
       field_name => $ref_display_key &>
  </a>
  </span>
%   } else {
  <span class="attribute-field">
%     if ($field_type eq 'key_field') {
    <span class="display-key">
      <a href='<% $c->uri_for("/view/object", $type, PomCur::DB::id_of_object($object),
                   { model => $model_name } ) %>'>
        <% $field_value %>
      </a>
    </span>
%     } else {
    <span class="non-key-attribute">
      <% $field_value %>
    </span>
%     }
  </span>
%   }
% }
</span>

<%init>
use PomCur::DB;
use PomCur::WebUtil;

use Number::Format;
use Data::Dumper;

my $col_conf = $class_info->{field_infos}->{$field_name};

my ($field_value, $field_type, $ref_display_key) =
  PomCur::WebUtil::get_field_value($c, $object, $class_info, $field_name);

my $type = $object->table();

my $referenced_object = undef;
my $ref_table = undef;
my $ref_class_info = undef;

if ($field_type eq 'foreign_key') {
  $referenced_object = $field_value;

  if (defined $referenced_object) {
    $ref_table = $referenced_object->table();
    my $class_infos = $c->config()->class_info($c);
    $ref_class_info = $class_infos->{$ref_table};
  }
}

if (!defined $field_value) {
  $field_value = '';
}

my $model_name = $c->request()->param('model');
</%init>
