<%args>
$config
$track_schema
$summary_date
$app_prefix
</%args>
% for my $type (@interesting_types) {
<% $type->{label} %>
%   if (defined $sessions{$type->{state}}) {
%     for my $session (@{$sessions{$type->{state}}}) {
<% $app_prefix %>/curs/<% $session->{curs_key} %> <% $session->{pub_uniquename} %>
  "<% $session->{pub_title} %>"
%     }
%   } else {
[none]
%   }

% }

<%init>
use PomCur::Curs::State qw/:all/;
use PomCur::Track;

my $state = PomCur::Curs::State->new(config => $config);

my @interesting_types =
  ({ state => SESSION_CREATED,
     label => "Sessions created on $summary_date, but not yet accepted" },
   { state => SESSION_ACCEPTED, label => "Sessions accepted on $summary_date" },
   { state => CURATION_IN_PROGRESS,
     label => "Sessions where curation started on $summary_date" },
   { state => NEEDS_APPROVAL,
     label => "Sessions needing approval from $summary_date" },
   { state => APPROVED, label => "Sessions approved on $summary_date" },
   );

my %sessions = ();

my $iter = PomCur::Track::curs_iterator($config, $track_schema);
while (my ($curs, $cursdb) = $iter->()) {
  my ($current_state, $submitter, $gene_count, $datestamp) =
    $state->get_state($cursdb);

  my $pub = $curs->pub();

  next unless $datestamp =~ /^$summary_date($|\s+)/;

  if (grep { $_ eq $current_state } map { $_->{state} } @interesting_types) {
    push @{$sessions{$current_state}}, {
      curs_key => $curs->curs_key(),
      datestamp => $datestamp,
      pub_uniquename => $pub->uniquename(),
      pub_title => $pub->title(),
    };
  }
}

$app_prefix =~ s|/$||;

</%init>
